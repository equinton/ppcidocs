::: {.content-visible when-profile="french"}

# Gestion de l'identification

PPCI propose plusieurs mécanismes pour gérer l'identification des utilisateurs :

*   stockage des comptes dans la base de données (BDD)
*   identification auprès d'un serveur LDAP (LDAP)
*   identification auprès d'un serveur _Common Access Service_ (CAS)
*   identification auprès d'un serveur _OpenID Connect_ (OIDC)
*   identification fournie par le serveur web, pour utiliser des mécanismes Shibboleth (mode _Mellon_ d'Apache par exemple) (HEADER)
*   des mécanismes mixtes, avec utilisation de serveurs tiers et stockage en base de données pour les comptes non gérés autrement :
    *   LDAP-BDD : test de l'identification auprès de l'annuaire LDAP, et en cas d'échec, auprès de la base de données
    *   CAS-BDD et OIDC-BDD : un bouton permet de sélectionner l'identification auprès du serveur considéré

En outre, les utilisateurs peuvent activer une double identification TOTP. Celle-ci est d'ailleurs obligatoire pour accéder aux modules d'administration.

À noter que **l'identification LDAP est aujourd'hui considérée comme obsolète**. Il vaut mieux se tourner vers des services OIDC ou CAS, quand ceux-ci sont disponibles.

## Paramètres spécifiques pour chaque type d'identification

### Identification en base de données

Les paramètres sont définis dans `Ppci\Config\IdentificationConfig`.

*   CONNECTION\_max\_attempts : en cas d'échec de connexion (par défaut 5), le compte sera bloqué pendant la durée spécifiée dans :
    *   _CONNECTION\_blocking\_duration_ (par défaut, 600 secondes). À noter que la tentative de connexion pendant cette durée réinitialise le compteur à zéro
*   _APP\_passwordMinLength_ : longueur minimum du mot de passe
*   _APPLI\_lostPassword_ : si positionné par 1 (défaut), l'utilisateur pourra demander à réinitialiser son mot de passe, sous réserve que son email soit renseigné
*   _tokenIdentityValidity_ : durée de validité du jeton généré lors de la connexion BDD ou LDAP, pour éviter d'avoir à se réidentifier pendant la journée. Par défaut, 10 heures.

### Identification LDAP

Les variables sont définies dans `Ppci\Config\IdentificationConfig.LDAP`.

*   _address_ : adresse du serveur LDAP
*   _port_ : port de connexion
*   _rdn_ : compte de connexion pour interroger l'annuaire, si nécessaire
*   _basedn_ : base de recherche des comptes
*   _user\_attrib_ : attribut contenant l'identifiant de l'utilisateur (uid)
*   _v3_ : version 3 de l'annuaire, positionné par défaut _true_
*   _tls_ : mettre à _true_ pour activer la connexion _tls_
*   _upn\_suffix_ : suffixe upn, nécessaire dans certains cas pour Active Directory
*   _groupSupport_ : si positionné à _true_, les groupes seront récupérés depuis l'annuaire pour alimenter le module de gestion des droits
*   _groupAttrib_ : nom de l'attribut comprenant les groupes de l'utilisateurs
*   _commonNameAttrib_ : nom de l'attribut comprenant le nom complet de l'utilisateur
*   _mailAttrib_ : nom de l'attribut comprenant l'email de l'utilisateur
*   _attributgroupname_ : nom de l'attribut comprenant le nom du groupe
*   _attributloginname_ : nom de l'attribut comprenant l'uid du membre
*   _basedngroup_ : chemin de recherche des groupes
*   _timeout_ : time-out de recherche dans l'annuaire (positionné à 2 secondes par défaut)
*   _ldapnoanonymous_ : si positionné à _true_, l'interrogation de l'annuaire pour récupérer les groupes impose une connexion
    *   _ldaplogin_ : login de connexion
    *   _ldappassword_ : mot de passe associé

### Icône pour le bouton d'identification (CAS-BDD ou OIDC-BDD)

Une icône est rajoutée sur le bouton permettant d'activer l'identification auprès du serveur CAS ou OIDC : `Ppci\Config\IdentificationConfig.identificationLogo = "${FRONT_DIR}/favicon.png"`

## Identification auprès de serveurs dédiés (HEADER, CAS, OIDC)

Les paramètres sont définis dans `Ppci\Config\IdentificationConfig.XX`, où XX doit être remplacé par CAS, OIDC ou HEADER.

Paramètres généraux :

*   _mail_ : attribut comprenant l'email
*   _firstname_ : attribut comprenant le prénom
*   _lastname_ : attribut comprenant le nom de famille
*   _name_ : attribut comprenant le nom complet
*   _groups_ : attribut comprenant les groupes d'appartenance des utilisateurs
*   _getGroups_ : si positionné à 1 (défaut), les groupes de l'utilisateur fournis par le serveur d'identification sont traités

### Paramètres spécifiques de l'identification CAS

*   _address_ : adresse du serveur CAS, par exemple : _monserveur.society.com_
*   _uri_ : dossier d'accès à l'identification. Par défaut : _/cas_
*   _port_ : par défaut, 443
*   _debug_ : si positionné à _true_ ou _1_, les traces sont stockées dans le fichier `writable/logs/cas.log`
*   _CApath_ : chemin d'accès au certificat permettant de valider le serveur CAS. S'il n'est pas renseigné, le serveur CAS ne sera pas vérifié (déconseillé en production)

### Identification OIDC

*   _name_ : code du provider
*   _provider_ : adresse web du provider (doit commencer par _https://_)
*   _clientId_ : code fourni par le provider
*   _clientSecret_ : clé secrète fournie par le provider
*   _scopeGroup_ : nom du _scope_ OIDC qui contient les attributs secondaires (par défaut : _affectation_)

### Identification HEADER

*   _login_ : nom de l'attribut de `$_SERVER` contenant le login, renvoyé par le serveur Apache
*   _organizationGranted_ : tableau contenant le code ou le nom des organismes autorisés. Si ce tableau est renseigné, et si un nouvel utilisateur n'appartient pas à une des organisations indiquées (attribut _organization_), la création de son compte ne sera pas effectuée
*   _groupsGranted_ : tableau contenant la liste des groupes autorisés. Si un utilisateur se connecte pour la première fois et que son groupe (ou un de ses groupes) appartient à la liste des groupes autorisés, son compte sera activé automatiquement. Dans le cas contraire, son compte sera désactivé, et un email est envoyé aux administrateurs pour les inviter à activer le compte.

## Gestion de l'accès aux modules d'administration

Les paramètres sont accessibles depuis `Ppci\Config\IdentificationConfig`.

*   _adminSessionDuration_ : durée pendant laquelle l'identification reste valide pour accéder aux modules d'administration. Par défaut, 10'.
*   _disableTotpToAdmin_ : si positionné à 1, désactive la double-identification pour accéder aux modules d'administration. Ne devrait pas être utilisé en production !

:::

::: {.content-visible when-profile="english"}
# Identification management

PPCI offers several mechanisms for managing user identification:

* storage of accounts in the database (BDD)
* identification with an LDAP server (LDAP)
* identification with a _Common Access Service_ (CAS) server
* identification with an _OpenID Connect_ (OIDC) server
* identification provided by the web server, to use Shibboleth mechanisms (Apache _Mellon_ mode, for example) (HEADER)
* mixed mechanisms, using third-party servers and database storage for accounts not otherwise managed:
    * LDAP-BDD: identification test with the LDAP directory, and if unsuccessful, with the database.
    * CAS-BDD and OIDC-BDD: a button can be used to select identification with the server in question.

In addition, users can activate dual TOTP identification. This is compulsory to access the administration modules.

Note that **LDAP identification is now considered obsolete**. It is better to use OIDC or CAS services, where available.

## Specific parameters for each type of identification

### Database identification

Parameters are defined in `Ppci\ConfigIdentificationConfig`.

*   CONNECTION\_max\_attempts : if the connection fails (default 5), the account will be blocked for the time specified in :
    *   _CONNECTION\_blocking\_duration_ (default 600 seconds). Note that attempting to connect during this period resets the counter to zero
*   _APP\_passwordMinLength_ : minimum password length.
*   _APPLI\_lostPassword_ : if set to 1 (default), the user will be able to ask for their password to be reset, provided their email address is entered
*   _tokenIdentityValidity_ : validity period of the token generated during the BDD or LDAP connection, to avoid having to re-identify during the day. By default, 10 hours.

### LDAP identification

Variables are defined in `Ppci\Config\IdentificationConfig.LDAP`.

*   _address_ : LDAP server address
*   _port_ : connection port
*   _rdn_ : login account for directory queries, if required
*   _basedn_ : account search base
*   _user\_attrib_ : attribute containing the user's identifier (uid)
*   _v3_ : version 3 of the directory, set by default to _true_
*   _tls_ : set to _true_ to activate the _tls_ connection
*   _upn\_suffix_ : upn suffix, necessary in some cases for Active Directory
*   _groupSupport_ : if set to _true_, groups will be retrieved from the directory to feed the rights management module
*   _groupAttrib_ : name of the attribute containing the user's groups
*   _commonNameAttrib_ : name of the attribute containing the common name
*   _mailAttrib_ : name of the attribute containing the email
*   _attributgroupname_ : name of the attribute containing the group name
*   _attributloginname_ : name of the attribute containing the uid member
*   _basedngroup_ : groups search path
*   _timeout_ : directory search time-out (set to 2 seconds by default)
*   _ldapnoanonymous_ : if set to _true_, querying the directory to retrieve groups requires a connection
    *   _ldaplogin_ : connection login
    *   _ldappassword_ : associated password

### Icon for the identification button (CAS-BDD ou OIDC-BDD)

An icon has been added to the button used to activate identification with the CAS or OIDC server: `Ppci\Config\IdentificationConfig.identificationLogo = "${FRONT_DIR}/favicon.png"`

## Identification on dedicated servers (HEADER, CAS, OIDC)

Parameters are defined in `Ppci\Config\IdentificationConfig.XX`, where XX must be replaced by CAS, OIDC or HEADER.

Generic parameters:

*   _mail_ : attribute containing the email
*   _firstname_ : attribute containing the first name
*   _lastname_ : attribute containing the last name
*   _name_ : attribute containing the common name
*   _groups_ : attribute containing user membership groups
*   _getGroups_ : if set to 1 (default), the user groups supplied by the identification server are processed

### Specific parameters for CAS identification

*   _address_ : CAS server address, by example: _monserveur.society.com_
*   _uri_ : identification access folder. Default setting : _/cas_
*   _port_ : default: 443
*   _debug_ : f set to _true_ or _1_, traces are stored in the file `writable/logs/cas.log`
*   _CApath_ : path to the certificate used to validate the CAS server. If it is not entered, the CAS server will not be verified (not recommended for production use).

### OIDC identification

*   _name_ : provider code
*   _provider_ : provider web address (must start with _https://_)
*   _clientId_ : code furnished by the provider
*   _clientSecret_ : secret key furnished by the provider
*   _scopeGroup_ : OIDC _scope_ name which contains the secondary attributes (default : _affectation_)

### HEADER identification

*   _login_ : name of the `$_SERVER` attribute containing the login, returned by the Apache server
*   _organizationGranted_ : table containing the code or name of authorised organisations. If this table is filled in, and if a new user does not belong to one of the organisations indicated (_organization_ attribute), their account will not be created.
*   _groupsGranted_ : table containing the list of authorised groups. If a user logs in for the first time and their group (or one of their groups) is on the list of authorised groups, their account will be activated automatically. If not, the account will be deactivated and an email will be sent to the administrators inviting them to activate the account.

## Managing access to administration modules

The parameters can be accessed from `Ppci\Config\IdentificationConfig`.

*   _adminSessionDuration_ : period during which the identification remains valid for access to the administration modules. Default: 10'.
*   _disableTotpToAdmin_ : if set to 1, disables dual-identification for access to administration modules. Should not be used in production!
:::